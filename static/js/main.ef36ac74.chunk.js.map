{"version":3,"sources":["functions/function.js","components/Contacto.js","components/Button.js","components/Insertar.js","components/Actualizar.js","components/Login.jsx","components/Logout.jsx","App.js","index.js"],"names":["obtenerTodosContactos","state","a","axios","get","peticion","data","Contacto","showEdit","setRefrescar","refrescar","user","useAuth0","useToast","toast","toastRef","borrar","referesco","id","id_contactos","className","alt","nombre_contacto","src","process","numero_contacto","onClick","error","timeout","ref","Button","children","Insertar","setMostrarInsertar","useState","nombre","numero","datos_formulario","setDatos_formulario","handleChange","e","target","name","value","htmlFor","onChange","Actualizar","contactoEditar","setMostrarActualizar","console","log","Login","loginWithRedirect","Logout","logout","App","setState","mostrarInsertar","mostrarActualizar","setContactoEditar","useEffect","length","map","ReactDOM","render","domain","clientId","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.ef36ac74.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const obtenerTodosContactos = async state => {\r\n\tconst peticion = await axios.get(\"https://backend-proyecto-contactos.herokuapp.com/obtener\");\r\n\tstate(peticion.data);\r\n};\r\n\r\nexport const insertaNuevoContacto = (nombre, numero) => {\r\n\taxios.get(`https://backend-proyecto-contactos.herokuapp.com/insertar/${nombre}/${numero}`);\r\n};\r\n\r\nexport const actualizarContacto = (id, nombre, numero) => {\r\n\taxios.get(`https://backend-proyecto-contactos.herokuapp.com/actualizar/${id}/${nombre}/${numero}`);\r\n};\r\n\r\nexport const borrarContacto = id => {\r\n\taxios.get(`https://backend-proyecto-contactos.herokuapp.com/borrar/${id}`);\r\n};\r\n","import \"../styles/estilos.css\";\r\nimport { borrarContacto } from \"../functions/function\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { useToast, Toast } from \"toastify-simply-react\";\r\n\r\nfunction Contacto({ state, showEdit, setRefrescar, refrescar }) {\r\n\tconst { user } = useAuth0();\r\n\tconst [toast, toastRef] = useToast();\r\n\r\n\tconst borrar = referesco => {\r\n\t\tborrarContacto(state.id_contactos);\r\n\t\tsetRefrescar(!referesco);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"contenedor\" key={state.id_contactos}>\r\n\t\t\t<div className=\"contenedor_info\">\r\n\t\t\t\t<img alt={state.nombre_contacto} src={process.env.PUBLIC_URL + \"/img/contact.png\"} />\r\n\t\t\t\t<div className=\"container_info-text\">\r\n\t\t\t\t\t<p className=\"text_name\">{state.nombre_contacto}</p>\r\n\t\t\t\t\t<p className=\"text_number\">{state.numero_contacto}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"container_button\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btns\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tif (user) {\r\n\t\t\t\t\t\t\t// console.log(\"El usuario si existe\");\r\n\t\t\t\t\t\t\tshowEdit(state.id_contactos, state.nombre_contacto, state.numero_contacto);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// console.log(\"El usuario NO existe\");\r\n\t\t\t\t\t\t\ttoast.error(\"Para poder Actualizar necesita iniciar sesion\", { timeout: \"1100\" });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tActualizar\r\n\t\t\t\t\t<img src={process.env.PUBLIC_URL + \"/img/iconEdit.svg\"} alt=\"edit\" />\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btns\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tif (user) {\r\n\t\t\t\t\t\t\tborrar(refrescar, state.id_contactos);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttoast.error(\"Para poder Eliminar necesita iniciar sesion\", { timeout: \"1000\" });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tEliminar\r\n\t\t\t\t\t<img src={process.env.PUBLIC_URL + \"/img/iconDelete.svg\"} alt=\"delete\" />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<Toast ref={toastRef} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Contacto;\r\n","import \"../styles/agregar.css\";\r\nfunction Button({ children, onClick }) {\r\n\treturn (\r\n\t\t<button className=\"btn_send\" onClick={onClick}>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nexport default Button;\r\n","import { useState } from \"react\";\r\nimport { insertaNuevoContacto } from \"../functions/function\";\r\nimport \"../styles/index.css\";\r\nimport \"../styles/agregar.css\";\r\nimport Button from \"./Button\";\r\n\r\nconst Insertar = ({ setMostrarInsertar }) => {\r\n\tconst [datos_formulario, setDatos_formulario] = useState({\r\n\t\tnombre: \"\",\r\n\t\tnumero: 0,\r\n\t});\r\n\r\n\tconst handleChange = e => {\r\n\t\tsetDatos_formulario({ ...datos_formulario, [e.target.name]: e.target.value });\r\n\t};\r\n\r\n\tconst insertar = () => {\r\n\t\tinsertaNuevoContacto(datos_formulario.nombre, datos_formulario.numero);\r\n\t\tsetMostrarInsertar(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"container_form_add\">\r\n\t\t\t<h2>Agregar Contacto</h2>\r\n\t\t\t<div className=\"form_add\">\r\n\t\t\t\t<div className=\"container__input\">\r\n\t\t\t\t\t<label htmlFor=\"nombre\">Nombre de Contacto:</label>\r\n\t\t\t\t\t<input id=\"nombre\" name=\"nombre\" onChange={handleChange} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"container__input\">\r\n\t\t\t\t\t<label htmlFor=\"numero\">NÃºmero de celular:</label>\r\n\t\t\t\t\t<input id=\"numero\" name=\"numero\" onChange={handleChange} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Button onClick={insertar}>Agregar</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Insertar;\r\n","import { useState } from \"react\";\r\nimport { actualizarContacto } from \"../functions/function\";\r\nimport \"../styles/agregar.css\";\r\nimport Button from \"./Button\";\r\n\r\nfunction Actualizar({ contactoEditar, setMostrarActualizar }) {\r\n\tconst [datos_formulario, setDatos_formulario] = useState({\r\n\t\tnombre: `${contactoEditar.nombre}`,\r\n\t\tnumero: `${contactoEditar.numero}`,\r\n\t});\r\n\r\n\tconst handleChange = e => {\r\n\t\tsetDatos_formulario({ ...datos_formulario, [e.target.name]: e.target.value });\r\n\t};\r\n\r\n\tconst editar = () => {\r\n\t\tactualizarContacto(contactoEditar.id, datos_formulario.nombre, datos_formulario.numero);\r\n\t\tsetMostrarActualizar(false);\r\n\t};\r\n\tconsole.log(contactoEditar);\r\n\r\n\treturn (\r\n\t\t<div className=\"container_form_add\">\r\n\t\t\t<h2>Actualizar Contacto:{contactoEditar.nombre}</h2>\r\n\t\t\t<div className=\"form_add\">\r\n\t\t\t\t<div className=\"container__input\">\r\n\t\t\t\t\t<label htmlFor=\"nombre\">Nombre de Contacto:</label>\r\n\t\t\t\t\t<input id=\"nombre\" name=\"nombre\" onChange={handleChange} value={datos_formulario.nombre} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"container__input\">\r\n\t\t\t\t\t<label htmlFor=\"numero\">NÃºmero de celular</label>\r\n\t\t\t\t\t<input id=\"numero\" name=\"numero\" onChange={handleChange} value={datos_formulario.numero} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Button onClick={editar}>Actualizar</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Actualizar;\r\n","import { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst Login = ({ className }) => {\r\n\tconst { loginWithRedirect } = useAuth0();\r\n\r\n\treturn (\r\n\t\t<button className={className} onClick={() => loginWithRedirect()}>\r\n\t\t\tIniciar Sesion\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n","import { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst Logout = ({ className }) => {\r\n\tconst { logout } = useAuth0();\r\n\treturn (\r\n\t\t<button className={className} onClick={() => logout()}>\r\n\t\t\tCerrar Sesion\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default Logout;\r\n","import { useEffect, useState } from \"react\";\nimport Contacto from \"./components/Contacto\";\nimport { obtenerTodosContactos } from \"./functions/function.js\";\nimport Insertar from \"./components/Insertar\";\nimport Actualizar from \"./components/Actualizar\";\nimport \"./styles/index.css\";\nimport Login from \"./components/Login\";\nimport Logout from \"./components/Logout\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useToast, Toast } from \"toastify-simply-react\";\n\nfunction App() {\n\tconst [refrescar, setRefrescar] = useState(false);\n\tconst [state, setState] = useState([]);\n\tconst { user } = useAuth0();\n\tconst [mostrarInsertar, setMostrarInsertar] = useState(false);\n\tconst [mostrarActualizar, setMostrarActualizar] = useState(false);\n\tconst [contactoEditar, setContactoEditar] = useState({});\n\tconst [toast, toastRef] = useToast();\n\n\tuseEffect(() => {\n\t\tobtenerTodosContactos(setState);\n\t}, [refrescar, mostrarInsertar, mostrarActualizar]);\n\n\tconst showEdit = (id, nombre, numero) => {\n\t\tsetMostrarActualizar(!mostrarActualizar);\n\t\tsetContactoEditar({ id, nombre, numero });\n\t};\n\n\tconsole.log(user);\n\treturn (\n\t\t<>\n\t\t\t<div className=\"container_log_btns\">\n\t\t\t\t<Login className=\"login\" />\n\t\t\t\t<Logout className=\"logout\" />\n\t\t\t</div>\n\t\t\t<div className=\"container__title\">\n\t\t\t\t<h1>Lista de contactos</h1>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"btn_newContact\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif (user) {\n\t\t\t\t\t\t\tconsole.log(\"El usuario si existe\");\n\t\t\t\t\t\t\tsetMostrarInsertar(!mostrarInsertar);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// console.log(\"El usuario NO existe\");\n\t\t\t\t\t\t\ttoast.error(\"Para poder Crear un contacto necesita iniciar sesion\", { timeout: \"1100\" });\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tAgregar contacto\n\t\t\t\t\t<img className=\"img-btn\" src={process.env.PUBLIC_URL + \"/img/iconContact.svg\"} alt=\"add_contact\" />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<Toast ref={toastRef} />\n\n\t\t\t<div className=\"padre_contenedor\">\n\t\t\t\t{mostrarInsertar ? <Insertar setMostrarInsertar={setMostrarInsertar}></Insertar> : \"\"}\n\t\t\t\t{mostrarActualizar ? <Actualizar contactoEditar={contactoEditar} setMostrarActualizar={setMostrarActualizar}></Actualizar> : \"\"}\n\n\t\t\t\t{state.length === 0 ? (\n\t\t\t\t\t<h2 className=\"loading\">Cargando...</h2>\n\t\t\t\t) : state ? (\n\t\t\t\t\tstate.map(e => {\n\t\t\t\t\t\treturn <Contacto showEdit={showEdit} state={e} key={e.id_contactos} setRefrescar={setRefrescar} refrescar={refrescar} />;\n\t\t\t\t\t})\n\t\t\t\t) : (\n\t\t\t\t\t`No existen contactos`\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport Login from \"./components/Login\";\n\nconst name_domain = process.env.REACT_APP_NAME_DOMAIN;\nconst client_id = process.env.REACT_APP_CLIENT_ID;\nReactDOM.render(\n\t<Auth0Provider domain={name_domain} clientId={client_id}>\n\t\t<BrowserRouter>\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"/FrontEnd-Proyecto-Contactos-/\" element={<App />} />\n\t\t\t\t<Route path=\"/FrontEnd-Proyecto-Contactos-/login\" element={<Login />} />\n\t\t\t</Routes>\n\t\t</BrowserRouter>\n\t</Auth0Provider>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}